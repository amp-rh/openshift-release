chain:
  as: interop-tests-fusion-access-environment-setup-chain
  steps:
  - chain: cucushift-installer-check-cluster-health
  - ref: interop-tests-fusion-access-create-namespaces
  - ref: interop-tests-fusion-access-create-pull-secrets
  - ref: interop-tests-fusion-access-configure-aws-security-groups
  - ref: interop-tests-fusion-access-install-fusion-access-operator
  - ref: interop-tests-fusion-access-create-fusionaccess-resource
  - ref: interop-tests-fusion-access-configure-kmm-registry
  - ref: interop-tests-fusion-access-check-crds
  - ref: interop-tests-fusion-access-check-nodes
  - ref: interop-tests-fusion-access-label-nodes
  - ref: interop-tests-fusion-access-prepare-worker-nodes
  - ref: interop-tests-fusion-access-create-cluster
  documentation: |-
    Fusion Access environment setup chain that provides the core deployment
    infrastructure for Fusion Access Operator testing.
    
    This chain sets up the complete Fusion Access environment including:
    - Cluster health verification
    - Fusion Access core deployment:
      - Namespace creation for Fusion Access and IBM Storage Scale
      - Pull secret creation for IBM registry access
      - AWS security group configuration for IBM Storage Scale networking
      - Fusion Access Operator installation with proper credentials
      - FusionAccess custom resource creation
      - KMM registry configuration for kernel module building
      - CRD validation and node readiness checks
      - Worker node labeling for storage components
      - Worker node preparation (creating required directories)
      - IBM Storage Scale cluster creation (without hardcoded device paths)
    
    After this chain completes, the environment is ready for storage-specific
    testing chains (EBS integration or CNV shared storage).
    
    Note: The Cluster uses /dev/disk/by-id/* device pattern to discover all
    attached devices automatically, avoiding instance-type-specific naming issues.
    KMM registry configuration enables kernel module building via Driver Toolkit.
    
    Prerequisites:
    - OpenShift cluster with sufficient worker nodes (minimum 3)
    - AWS cluster with proper security group configuration
    - IBM entitlement credentials (for production runs, optional for rehearsal)
    
    This chain provides a clean separation between environment setup and
    storage-specific testing, allowing for better test organization and
    reusability across different storage backends.
